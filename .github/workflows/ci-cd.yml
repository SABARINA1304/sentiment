name: CI/CD for Dockerized Flask App

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  dockerbuild:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4  # Checkout the code

      - name: List contents of sentiment directory  # Verify if requirements.txt exists
        run: |
          echo "Contents of sentiment directory:"
          ls sentiment/  # List files in sentiment directory

      - name: Build The Docker Image
        run: |
          docker build . --file sentiment/Dockerfile --tag workflow-test:$(date +%s)  # Use current directory as context

  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Upgrade pip
        run: |
          python -m pip install --upgrade pip  # Upgrade pip

      - name: List contents of sentiment directory  # Verify if requirements.txt exists
        run: |
          echo "Contents of sentiment directory:"
          ls sentiment/  # List files in sentiment directory

      - name: Install dependencies
        run: |
          pip install -r sentiment/requirements.txt  # Ensure requirements.txt is present in sentiment folder

      - name: Run tests
        run: |
          pytest  # Ensure you have tests in the correct directory

  build-and-publish:
    needs: build-and-test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}  # Add Docker Hub username as a secret
          password: ${{ secrets.DOCKER_PASSWORD }}  # Add Docker Hub password as a secret

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .  # Use current directory as context
          file: sentiment/Dockerfile  # Dockerfile path
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/flasktest-app:latest

      - name: Image digest
        run: echo ${{ steps.build-and-publish.outputs.digest }}
